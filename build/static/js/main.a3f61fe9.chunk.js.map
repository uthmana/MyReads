{"version":3,"sources":["Book.js","ListBook.js","BooksAPI.js","App.js","index.js"],"names":["Book","state","shelf","changeBookShelf","event","setState","target","value","props","onUpdateBook","book","this","style","width","height","backgroundImage","imageLinks","thumbnail","className","onChange","disabled","title","authors","toString","React","Component","ListBook","updateBook","onUpdateShelf","books","filter","map","id","to","api","token","localStorage","Math","random","substr","headers","Accept","Authorization","update","fetch","method","body","JSON","stringify","then","res","json","search","query","data","BooksApp","showingBooks","updateShelf","findIndex","b","BooksAPI","updateQuery","response","length","index","c","exact","path","render","type","placeholder","i","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a3f61fe9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Book extends React.Component {\r\n  state = {\r\n    shelf: \"none\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { book } = this.props;\r\n    if (book.shelf) {\r\n      this.setState({ shelf: book.shelf });\r\n    }\r\n  }\r\n\r\n  changeBookShelf = (event) => {\r\n    this.setState({\r\n      shelf: event.target.value,\r\n    });\r\n    this.props.onUpdateBook(this.props.book, event.target.value);\r\n  };\r\n\r\n  render() {\r\n    const style = {\r\n      width: 128,\r\n      height: 192,\r\n      backgroundImage: this.props.book.imageLinks\r\n        ? `url(${this.props.book.imageLinks.thumbnail})`\r\n        : \"\",\r\n    };\r\n\r\n    return (\r\n      <li>\r\n        <div className=\"book\">\r\n          <div className=\"book-top\">\r\n            <div className=\"book-cover\" style={style}></div>\r\n            <div className=\"book-shelf-changer\">\r\n              <select onChange={this.changeBookShelf} value={this.state.shelf}>\r\n                <option value=\"move\" disabled>\r\n                  Move to...\r\n                </option>\r\n                <option value=\"currentlyReading\">Currently Reading</option>\r\n                <option value=\"wantToRead\">Want to Read</option>\r\n                <option value=\"read\">Read</option>\r\n                <option value=\"none\">None</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"book-title\">{this.props.book.title}</div>\r\n          <div className=\"book-authors\">\r\n            {this.props.book.authors ? this.props.book.authors.toString() : \" \"}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nexport default Book;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Book from './Book'\r\n\r\nclass ListBook extends React.Component {\r\n  updateBook = (book, shelf) => {\r\n    this.props.onUpdateShelf(book, shelf)\r\n  }\r\n\r\n  render() {\r\n    return (<div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  { this.props.books.filter(book => book.shelf === 'currentlyReading')\r\n                    .map(book => (\r\n                      <Book key={book.id} book={book} onUpdateBook={(book, shelf) => this.updateBook(book, shelf)}></Book>\r\n                    ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  { this.props.books.filter(book => book.shelf === 'wantToRead')\r\n                    .map(book => (\r\n                      <Book key={book.id} book={book} onUpdateBook={(book, shelf) => this.updateBook(book, shelf)}></Book>\r\n                    ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  { this.props.books.filter(book => book.shelf === 'read')\r\n                    .map(book => (\r\n                      <Book key={book.id} book={book} onUpdateBook={(book, shelf) => this.updateBook(book, shelf)}/>\r\n                    ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link to=\"/search\">Add a book</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListBook","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token;\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import React, {Component} from 'react'\r\n// import * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport ListBook from \"./ListBook\"\r\nimport {Route , Link} from 'react-router-dom'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport Book from \"./Book\";\r\n\r\nclass BooksApp extends Component {\r\n  state = {\r\n    books: [],\r\n    query: '',\r\n    showingBooks: []\r\n  }\r\n\r\n  updateShelf = (book, shelf) => {\r\n    let books;\r\n    if (this.state.books.findIndex(b => b.id === book.id) > 0) {\r\n      // change the position of an existing book in the shelf\r\n      books = this.state.books.map(b => {\r\n        if (b.id === book.id) {\r\n          return {...book, shelf}\r\n        } else {\r\n          return b\r\n        }\r\n      })\r\n    } else {\r\n      // add a new book to the shelf\r\n      books = [...this.state.books, {...book, shelf}]\r\n    }\r\n\r\n    this.setState({books})\r\n\r\n    BooksAPI.update(book, shelf).then((data) => {\r\n      // shelf updated on the server\r\n    })\r\n  }\r\n\r\n  // get all the books before loading the component\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then((books) => {\r\n      this.setState({books})\r\n    })\r\n  }\r\n\r\n  // managing the input state\r\n  updateQuery = (query) => {\r\n    this.setState({query: query})\r\n    let showingBooks = []\r\n    if (query) {\r\n      BooksAPI.search(query).then(response => {\r\n        if (response.length) {\r\n          showingBooks = response.map(b => {\r\n            const index = this.state.books.findIndex(c => c.id === b.id)\r\n            if(index >= 0 ) {\r\n              return this.state.books[index]\r\n            } else {\r\n              return b\r\n            }\r\n          })\r\n        }\r\n        this.setState({showingBooks})\r\n      })\r\n    }\r\n    else {\r\n      this.setState({showingBooks})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {query} = this.state\r\n    return (\r\n      <div className=\"app\">\r\n\r\n          <Route exact path=\"/search\" render={() => (\r\n            <div className=\"search-books\">\r\n              <div className=\"search-books-bar\">\r\n                <Link className=\"close-search\" to=\"/\">Close</Link>\r\n                <div className=\"search-books-input-wrapper\">\r\n                  <input type=\"text\"\r\n                         placeholder=\"Search by title or author\"\r\n                         value={query}\r\n                         onChange={(event) => this.updateQuery(event.target.value)}\r\n                  />\r\n\r\n                </div>\r\n              </div>\r\n              <div className=\"search-books-results\">\r\n                <ol className=\"books-grid\">\r\n                  {this.state.showingBooks.map((book, i) => (\r\n                    <Book key={i} book={book}\r\n                          onUpdateBook={(book, shelf) => this.updateShelf(book, shelf)}/>\r\n                  ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          )} />\r\n          \r\n          <Route exact path=\"/\" render={() => (\r\n            <ListBook books={this.state.books}\r\n                       onUpdateShelf={(book, shelf) => this.updateShelf(book, shelf)}/>\r\n          )}/>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}